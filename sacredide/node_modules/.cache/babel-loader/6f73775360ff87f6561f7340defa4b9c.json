{"ast":null,"code":"var _jsxFileName = \"/home/arpit4032/Desktop/SacredIDE/sacredide/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport SolveProblem from './Components/SolveProblem/SolveProblem';\nimport { ContestData } from './Components/ContestData/ContestData';\nimport ContestListDisplayer from './Components/ContestListDisplayer/ContestListDisplayer';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Problem from './Components/Problem/Problem';\nimport Profile from './Components/Profile/Profile';\nimport Result from './Components/Result/Result';\nimport Scroll from './Functions/Scroll';\nimport './App.css';\nimport HackerEarth from 'hackerearth-node';\nconst hackerEarth = new HackerEarth('2e9c01fea03ed5c75426d580a4ff85bc34df81e0', ''); //I removed the secret API key for security reasons \n//use your own API key as first parameter in HackerEarth()\n//for example const hackerEarth=new HackerEarth('SECRET_API_KEY','');\n//ek problem ho rhi hai site me\n//compile wala button click karne pe uske pichhle bar jo code \n//likha tha ide pe uska response dikha raha console pe aur result me\n//par code submitted me sahi code dikha raha wo nahi lag kar raha\n//iske liye ek tarika socha hai\n//ek nayi button bana lenge ,onButtonShow usko compile karne ke baad \n//use karega user , to jab wo click hogi tabhi results show karenge \n//aur show karne se pahle hi code compile ho chuka hoga so naya result \n//hi aayega samne\n//isko sahi karne ke liye onButtonCompile aur aur onButtonSubmit ko\n//2 baar run kara denge for loop ka use karke usse ye sahi ho jayega\n\n/*API respone format in case of RUN:\n\ni.e. in case of hackerearth.run()\n\nSUCCESS->\n\n{\"run_status\": \n  {\"memory_used\": \"64\",\n   \"time_limit\": 1,\n   \"output_html\": \"hi<br>\",\n   \"memory_limit\": 262144,\n   \"time_used\": \"0.101504\",\n   \"signal\": \"OTHER\",\n   \"exit_code\": \"0\",\n   \"status_detail\": \"NA\",\n   \"status\": \"AC\",\n   \"stderr\": \"\",\n   \"output\": \"hi\\n\",\n   \"async\": 0,\n   \"request_NOT_OK_reason\": \"\",\n   \"request_OK\": \"True\"\n  },\n \"compile_status\": \"OK\",\n \"code_id\": \"952f82x\"\n}\n\nFAILURE->\n\n{\"run_status\": \n  {\"status\": \"CE\",\n   \"status_detail\": \"Correct the compilation/syntax errors.\"\n  },\n\"compile_status\": \"\",\n\"code_id\": \"91b524n\"\n}\n\n*/\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          submissions: data.submissions,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onCodeChange = event => {\n      // console.log(this.state.code);\n      this.setState({\n        code: event.target.value\n      }); // console.log(this.state.code);\n    };\n\n    this.onLanguageChange = event => {\n      this.setState({\n        progLang: event.target.value\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        testCases: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.source = this.state.code; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.language = this.state.progLang; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.input = this.state.testCases; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      hackerEarth.run(this.state.config).then(result => {\n        const runOutput = JSON.parse(result); // console.log(runOutput);\n        // console.log(runOutput.run_status.output);\n\n        if (runOutput.compile_status !== \"OK\") {\n          this.setState({\n            compileRes: \"compilation error\"\n          });\n          this.setState({\n            runRes: \"\"\n          });\n        } else {\n          fetch('http://localhost:3000/code', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              submissions: count\n            }));\n          });\n          this.setState({\n            compileRes: \"compilation successful<h3>The output is:</h3>\"\n          });\n          this.setState({\n            runRes: runOutput.run_status.output_html\n          });\n        }\n      }).catch(err => {\n        if (this.state.progLang === \"\" || this.state.progLang === \"Select\") {\n          this.setState({\n            compileRes: \"compilation error<br>please select a language\"\n          });\n          this.setState({\n            runRes: \"\"\n          });\n        } else {\n          this.setState({\n            compileRes: \"compilation error<br>please write some code\"\n          });\n          this.setState({\n            runRes: \"\"\n          });\n        }\n      });\n    };\n\n    this.onButtonCompile = () => {\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.source = this.state.code; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.language = this.state.progLang; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      this.setState(prevState => {\n        let config = Object.assign({}, prevState.config); // creating copy of state variable jasper\n\n        config.input = this.state.testCases; // update the name property, assign a new value                 \n\n        return {\n          config\n        }; // return new object jasper object\n      });\n      hackerEarth.compile(this.state.config).then(result => {\n        const compilationOutput = JSON.parse(result);\n        this.setState({\n          runRes: \"\"\n        });\n        if (compilationOutput.compile_status === \"OK\") this.setState({\n          compileRes: \"compilation successful\"\n        });else this.setState({\n          compileRes: \"compilation error\"\n        }); // console.log(this.state.compileRes);\n      }).catch(err => {\n        if (this.state.progLang === \"\" || this.state.progLang === \"Select\") {\n          this.setState({\n            compileRes: \"compilation error<br>please select a language\"\n          });\n          this.setState({\n            runRes: \"\"\n          });\n        } else {\n          this.setState({\n            compileRes: \"compilation error<br>please write some code\"\n          });\n          this.setState({\n            runRes: \"\"\n          });\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'register') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      config: {\n        time_limit: 1,\n        memory_limit: 323244,\n        input: '',\n        source: \"prin 'Hello World'\",\n        language: 'PYTHON'\n      },\n      code: \"\",\n      testCases: \"\",\n      progLang: \"\",\n      submission: {},\n      route: 'signin',\n      isSignedIn: false,\n      compileRes: \"\",\n      runRes: \"\",\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        submissions: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(SolveProblem, {\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"f2 light-red underline ma4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \"Live Contests\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ContestListDisplayer, {\n      ContestData: ContestData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    })))) : this.state.route === 'problem' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Problem, {\n      onCodeChange: this.onCodeChange,\n      onLanguageChange: this.onLanguageChange,\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      onButtonCompile: this.onButtonCompile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Result, {\n      compileRes: this.state.compileRes,\n      runRes: this.state.runRes,\n      sourceCode: this.state.config.source,\n      codeLanguage: this.state.config.language,\n      inputCases: this.state.config.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    })) : this.state.route === 'profile' ? /*#__PURE__*/React.createElement(Profile, {\n      name: this.state.user.name,\n      submissions: this.state.user.submissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 14\n      }\n    }) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/arpit4032/Desktop/SacredIDE/sacredide/src/App.js"],"names":["React","Component","Navigation","SolveProblem","ContestData","ContestListDisplayer","SignIn","Register","Problem","Profile","Result","Scroll","HackerEarth","hackerEarth","App","constructor","loadUser","data","setState","user","id","name","email","submissions","joined","onCodeChange","event","code","target","value","onLanguageChange","progLang","onInputChange","testCases","onButtonSubmit","prevState","config","Object","assign","source","state","language","input","run","then","result","runOutput","JSON","parse","compile_status","compileRes","runRes","fetch","method","headers","body","stringify","response","json","count","run_status","output_html","catch","err","onButtonCompile","compile","compilationOutput","onRouteChange","route","isSignedIn","time_limit","memory_limit","submission","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport SolveProblem from './Components/SolveProblem/SolveProblem';\nimport {ContestData} from './Components/ContestData/ContestData';\nimport ContestListDisplayer from './Components/ContestListDisplayer/ContestListDisplayer';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nimport Problem from './Components/Problem/Problem';\nimport Profile from './Components/Profile/Profile';\nimport Result from './Components/Result/Result';\nimport Scroll from './Functions/Scroll';\nimport './App.css';\nimport HackerEarth from 'hackerearth-node';\n\nconst hackerEarth=new HackerEarth('2e9c01fea03ed5c75426d580a4ff85bc34df81e0','');\n//I removed the secret API key for security reasons \n//use your own API key as first parameter in HackerEarth()\n//for example const hackerEarth=new HackerEarth('SECRET_API_KEY','');\n\n//ek problem ho rhi hai site me\n//compile wala button click karne pe uske pichhle bar jo code \n//likha tha ide pe uska response dikha raha console pe aur result me\n//par code submitted me sahi code dikha raha wo nahi lag kar raha\n//iske liye ek tarika socha hai\n//ek nayi button bana lenge ,onButtonShow usko compile karne ke baad \n//use karega user , to jab wo click hogi tabhi results show karenge \n//aur show karne se pahle hi code compile ho chuka hoga so naya result \n//hi aayega samne\n//isko sahi karne ke liye onButtonCompile aur aur onButtonSubmit ko\n//2 baar run kara denge for loop ka use karke usse ye sahi ho jayega\n\n\n\n\n/*API respone format in case of RUN:\n\ni.e. in case of hackerearth.run()\n\nSUCCESS->\n\n{\"run_status\": \n  {\"memory_used\": \"64\",\n   \"time_limit\": 1,\n   \"output_html\": \"hi<br>\",\n   \"memory_limit\": 262144,\n   \"time_used\": \"0.101504\",\n   \"signal\": \"OTHER\",\n   \"exit_code\": \"0\",\n   \"status_detail\": \"NA\",\n   \"status\": \"AC\",\n   \"stderr\": \"\",\n   \"output\": \"hi\\n\",\n   \"async\": 0,\n   \"request_NOT_OK_reason\": \"\",\n   \"request_OK\": \"True\"\n  },\n \"compile_status\": \"OK\",\n \"code_id\": \"952f82x\"\n}\n\nFAILURE->\n\n{\"run_status\": \n  {\"status\": \"CE\",\n   \"status_detail\": \"Correct the compilation/syntax errors.\"\n  },\n\"compile_status\": \"\",\n\"code_id\": \"91b524n\"\n}\n\n*/\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      config:{\n        time_limit:1,\n        memory_limit:323244,\n        input:'',\n        source:\"prin 'Hello World'\",\n        language:'PYTHON'\n      },\n      code:\"\",\n      testCases:\"\",\n      progLang:\"\",\n      submission:{},\n      route:'signin',\n      isSignedIn: false,\n      compileRes:\"\",\n      runRes:\"\",\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        submissions: 0,\n        joined: ''\n      }\n    }\n  }\n\nloadUser = (data) =>{\n  this.setState({user:{\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    submissions: data.submissions,\n    joined: data.joined\n  }})\n}\n\n\nonCodeChange = (event) =>{\n  // console.log(this.state.code);\n   this.setState({code:event.target.value});\n   // console.log(this.state.code);\n}\n\nonLanguageChange = (event) =>{\n  this.setState({progLang:event.target.value});\n}\n\nonInputChange = (event) =>{\n  this.setState({testCases:event.target.value});\n}\n\nonButtonSubmit = () =>{\n  this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.source = this.state.code;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n    this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.language = this.state.progLang;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n    this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.input = this.state.testCases;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n    hackerEarth.run(this.state.config)\n                    .then(result => {\n                      const runOutput = JSON.parse(result);\n                      // console.log(runOutput);\n                      // console.log(runOutput.run_status.output);\n                      if(runOutput.compile_status!==\"OK\"){\n                        this.setState({compileRes:\"compilation error\"}); \n                        this.setState({runRes:\"\"});\n                      }\n                      else{\n                        fetch('http://localhost:3000/code',{\n                          method: 'put',\n                          headers: {'Content-Type':'application/json'},\n                          body: JSON.stringify({\n                            id: this.state.user.id\n                          })\n                        })\n                          .then(response=>response.json())\n                          .then(count=>{\n                              this.setState(Object.assign(this.state.user,{submissions:count}))\n                            })\n                        this.setState({compileRes:\"compilation successful<h3>The output is:</h3>\"});\n                        this.setState({runRes:runOutput.run_status.output_html});\n                      } \n\n                    })\n                    .catch(err => {\n                      if(this.state.progLang===\"\"||this.state.progLang===\"Select\"){\n                        this.setState({compileRes:\"compilation error<br>please select a language\"});\n                        this.setState({runRes:\"\"});\n                      }\n                      else{\n                        this.setState({compileRes:\"compilation error<br>please write some code\"});\n                        this.setState({runRes:\"\"});\n                      }\n                        \n                    });\n\n}\nonButtonCompile = () =>{\n    this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.source = this.state.code;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n    this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.language = this.state.progLang;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n    this.setState(prevState => {\n      let config = Object.assign({}, prevState.config);  // creating copy of state variable jasper\n      config.input = this.state.testCases;                     // update the name property, assign a new value                 \n      return { config };                                 // return new object jasper object\n    })\n  hackerEarth.compile(this.state.config)\n                        .then((result) => {\n                          const compilationOutput = JSON.parse(result);\n                          this.setState({runRes:\"\"});\n                          if(compilationOutput.compile_status===\"OK\")\n                              this.setState({compileRes:\"compilation successful\"});\n                          else\n                              this.setState({compileRes:\"compilation error\"});\n                          // console.log(this.state.compileRes);\n                        })\n                        .catch(err => {\n                          if(this.state.progLang===\"\"||this.state.progLang===\"Select\"){\n                              this.setState({compileRes:\"compilation error<br>please select a language\"});\n                              this.setState({runRes:\"\"});\n                          }\n                          else{\n                              this.setState({compileRes:\"compilation error<br>please write some code\"});\n                              this.setState({runRes:\"\"});\n                          }\n                        });\n}\n\n\n\nonRouteChange = (route) =>{\n  if(route === 'signin'){ \n    this.setState({isSignedIn:false})\n  }\n  else if(route === 'register'){\n    this.setState({isSignedIn:false})\n  }\n  else{\n    this.setState({isSignedIn:true})\n  }\n  this.setState({route: route});\n}\n\n  \n  render(){\n  return (\n    <div className='App'>\n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n      {\n        this.state.route === 'home'\n        ?<div>\n            <SolveProblem onRouteChange={this.onRouteChange}/>\n            <div className='f2 light-red underline ma4'>\n              Live Contests\n            </div>\n            <div>\n              <Scroll>\n                <ContestListDisplayer ContestData={ContestData}/>\n              </Scroll>\n            </div>\n          </div>\n        :(\n          this.state.route === 'problem'\n          ?<div>\n            <Problem \n              onCodeChange={this.onCodeChange}\n              onLanguageChange={this.onLanguageChange} \n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit} \n              onButtonCompile={this.onButtonCompile} \n            />\n            <Result\n              compileRes={this.state.compileRes}\n              runRes={this.state.runRes}\n              sourceCode={this.state.config.source}\n              codeLanguage={this.state.config.language}\n              inputCases={this.state.config.input}\n            />\n          </div>\n          :(\n            this.state.route==='profile'\n            ?<Profile \n              name={this.state.user.name} \n              submissions={this.state.user.submissions}\n              />\n            :(\n              this.state.route === 'signin'\n              ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              )\n            )\n          )\n      }\n      {/*<Contest/>\n      <Problem/>\n      <SIgnIn/>\n      <SignOut/>*/}\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}